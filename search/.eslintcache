[{"/Users/johnbel/Desktop/Search input/search/src/index.js":"1","/Users/johnbel/Desktop/Search input/search/src/App.js":"2","/Users/johnbel/Desktop/Search input/search/src/reportWebVitals.js":"3","/Users/johnbel/Desktop/Search input/search/src/search.js":"4","/Users/johnbel/Desktop/Search input/search/src/Search.js":"5"},{"size":500,"mtime":1608670557425,"results":"6","hashOfConfig":"7"},{"size":171,"mtime":1608672532416,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608670557426,"results":"9","hashOfConfig":"7"},{"size":333,"mtime":1608672563607,"results":"10","hashOfConfig":"7"},{"size":333,"mtime":1608672563607,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1h1xrys",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/johnbel/Desktop/Search input/search/src/index.js",[],["26","27"],"/Users/johnbel/Desktop/Search input/search/src/App.js",[],"/Users/johnbel/Desktop/Search input/search/src/reportWebVitals.js",[],"/Users/johnbel/Desktop/Search input/search/src/search.js",["28","29","30"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n\n\n\nvar Typeahead = require('react-typeahead').Typeahead;\n\nfunction Search(){\n// I chose to go with type ahead, if we had a database\n  return(\n    <Typeahead\n    options={['John', 'Paul', 'George', 'Ringo']}\n    maxVisible={2}\n    />\n  );\n\n\n}\n\nexport default Search;\n",["31","32"],"/Users/johnbel/Desktop/Search input/search/src/Search.js",["33","34"],"import React, { useState, useEffect } from 'react';\n\nvar Typeahead = require('react-typeahead').Typeahead;\n\nfunction Search(){\n// I chose to go with type ahead, if we had a database\n  return(\n    <div>\n<Typeahead\n    options={['John', 'Paul', 'George', 'Ringo']}\n    maxVisible={2}\n    />\n    </div>\n  );\n\n\n}\n\nexport default Search;\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},{"ruleId":"39","severity":1,"message":"43","line":1,"column":27,"nodeType":"41","messageId":"42","endLine":1,"endColumn":36},{"ruleId":"39","severity":1,"message":"44","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":17},{"ruleId":"35","replacedBy":"45"},{"ruleId":"37","replacedBy":"46"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},{"ruleId":"39","severity":1,"message":"43","line":1,"column":27,"nodeType":"41","messageId":"42","endLine":1,"endColumn":36},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'PropTypes' is defined but never used.",["47"],["48"],"no-global-assign","no-unsafe-negation"]